package GUI;

import at.htlklu.elektronik.schnittstellen.SerielleSchnittstelle;
import at.htlklu.elektronik.schnittstellen.StringEvent;
import at.htlklu.elektronik.schnittstellen.StringListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import serial.SerialComm;

public class MainFrame extends javax.swing.JFrame implements StringListener {
    // Commands to be send to RF-Modul (Coordinator)
    //----------------------------------------------------

    public static final String GETDATA = "#getdata";
    public static final String GETECHO = "#getecho";
    public static final String GETNODES = "#getnodes";
    public static final String GETCONNECTEDNODE = "#getnodeaddress";
    public static final int COMMAND_GETDATA = 0;
    public static final int COMMAND_GETECHO = 1;
    public static final int COMMAND_GETNODES = 2;
    public static final int COMMAND_CLOSE = 3;
    public static final int COMMAND_GETCONNECTEDNODE = 4;
    //---------------------------------------------------
    // Commands reveived from RF-Modul (Coordinator)
    //----------------------------------------------------
    private static final String BODATA = "#BOData";
    private static final String EODATA = "#EOData";
    private static final String ECHORESPONSE = "#pingresponse";
    //---------------------------------------------------
    public static final int STATE_IDLE = 0;
    public static final int STATE_LISTENING = 1;
    public static final int STATE_LISTENING_NL = 2;
    private SerielleSchnittstelle com;
    private String strR;
    private int state;
    private ArrayList<String> dataString = new ArrayList<String>();
    private ArrayList<String> nodes = new ArrayList<String>();

    /** Creates new form MainFrame */
    public MainFrame() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        ArrayList<String> ports = SerielleSchnittstelle.listPorts();
        for (int i = 0; i < ports.size(); i++) {
            jcbCom.addItem(ports.get(i));
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnGetData = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListNodes = new javax.swing.JList();
        jbtnGetEcho = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlblConnected = new javax.swing.JLabel();
        jlblConnectedNA = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jcbCom = new javax.swing.JComboBox();
        jcbBaud = new javax.swing.JComboBox();
        jtxtSend = new javax.swing.JTextField();
        jbtnSend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtOut = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbtnGetData.setText("getdata");
        jbtnGetData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGetDataActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jListNodes);

        jbtnGetEcho.setText("getecho");
        jbtnGetEcho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGetEchoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nodes");

        jLabel2.setText("UART Output");

        jlblConnected.setText("disconnected:");

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcbBaud.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "9600", "19200", "38400", "115200" }));

        jbtnSend.setText("send");
        jbtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSendActionPerformed(evt);
            }
        });

        jtxtOut.setColumns(20);
        jtxtOut.setRows(5);
        jScrollPane2.setViewportView(jtxtOut);

        jButton2.setText("clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlblConnectedNA, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblConnected, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnGetData, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(jbtnGetEcho, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 377, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtxtSend, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbBaud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCom, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jlblConnected)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlblConnectedNA, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                        .addComponent(jbtnGetData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnGetEcho))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jcbCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBaud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSend))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (com != null) {
            com.removeStringListener(this);
            System.out.println("1");
            com.disconnect();
            System.out.println("1");

        } else {
            System.out.println("2");
            com = new SerielleSchnittstelle((String) jcbCom.getSelectedItem(), Integer.parseInt(jcbBaud.getSelectedItem().toString()), 8, 1, 0);
            com.addStringListener(this);
            com.setStringDelimiter(SerielleSchnittstelle.DELIMITER_LF);
        }
        System.out.println("3");
        com.setPortName((String) jcbCom.getSelectedItem());
        com.setBaudRate(Integer.parseInt(jcbBaud.getSelectedItem().toString()));
        sendCommand(COMMAND_GETNODES, 0);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtnGetDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGetDataActionPerformed
        if (com.isConnected()) {
            System.out.println(Integer.parseInt(jListNodes.getSelectedValue().toString()));
            sendCommand(COMMAND_GETDATA, Integer.parseInt(jListNodes.getSelectedValue().toString()));
        } else {
            JOptionPane.showMessageDialog(this, "not connected");
        }
    }//GEN-LAST:event_jbtnGetDataActionPerformed

    private void jbtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSendActionPerformed
        if (com != null) {
            sendString_d(jtxtSend.getText());
        }
    }//GEN-LAST:event_jbtnSendActionPerformed

    private void jbtnGetEchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGetEchoActionPerformed
        if (com != null) {
            sendCommand(COMMAND_GETECHO, Integer.parseInt(jListNodes.getSelectedValue().toString()));
        }
    }//GEN-LAST:event_jbtnGetEchoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jtxtOut.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public void sendCommand(int command, int nodeAddr) {
        if (com.isConnected()) {
            switch (command) {
                case COMMAND_GETDATA:
                    sendString_d(GETDATA + " " + nodeAddr);
                    break;
                case COMMAND_GETECHO:
                    sendString_d(GETECHO + " " + nodeAddr);
                    break;
                case COMMAND_GETNODES:
                    sendString_d(GETNODES);
                    break;
                case COMMAND_GETCONNECTEDNODE:
                    sendString_d(GETCONNECTEDNODE);
                    break;
                default:
                    System.out.println("unkown command");
            }
        } else {
        }
    }
    /*
     * sends the String with a delay between every charackter
     * This needs to be done to avoid timing problems on the micro controller
     */

    public void sendString_d(String s) {
        try {
            char[] ca = s.toCharArray();
            com.sendByte(' ');
            Thread.sleep(10);
            for (int j = 0; j < ca.length; j++) {
                com.sendByte(ca[j]);
                Thread.sleep(2);
            }
            com.sendByte('\n');
        } catch (InterruptedException ex) {
            Logger.getLogger(SerialComm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void stringReceived(StringEvent se) {
        strR = se.getStringReceived();
        if (strR.startsWith(BODATA)) {
            state = STATE_LISTENING;
            System.out.println("got BODATA");
        }
        if (strR.startsWith(EODATA)) {
            System.out.println("got EODATA");
        }

        if (state == STATE_LISTENING) {
            state = STATE_IDLE;
        }


        if (strR.startsWith("#nodelist")) {
            state = STATE_LISTENING_NL;
        }
        if (strR.startsWith("#shortaddr:") && state == STATE_LISTENING_NL) {
            nodes.add(strR.substring(11));
        }
        if (strR.startsWith("##")) {
            state = STATE_IDLE;
        }
        jListNodes.setListData(nodes.toArray());
        jtxtOut.append(strR);
        jtxtOut.append("\n");

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListNodes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnGetData;
    private javax.swing.JButton jbtnGetEcho;
    private javax.swing.JButton jbtnSend;
    private javax.swing.JComboBox jcbBaud;
    private javax.swing.JComboBox jcbCom;
    private javax.swing.JLabel jlblConnected;
    private javax.swing.JLabel jlblConnectedNA;
    private javax.swing.JTextArea jtxtOut;
    private javax.swing.JTextField jtxtSend;
    // End of variables declaration//GEN-END:variables
}
